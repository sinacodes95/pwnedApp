{"version":3,"sources":["components/NavBar.js","components/Home.js","containers/Email.js","containers/Password.js","containers/Login.js","containers/App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","NavLink","to","Home","Email","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emailInput","event","setState","target","value","splitEmails","emailsStirngList","replace","match","split","getBreachedEmails","isLoading","emailOutput","emailNotFound","emails","state","length","forEach","element","fetch","concat","then","res","json","JSON","parse","toConsumableArray","catch","err","closeCard","_this$state","onChange","id","htmlFor","onClick","type","map","emailBreach","index","key","email","Breaches","breach","Name","Domain","BreachDate","PwnCount","Component","Password","passwordInput","getBreachedPassword","passwordNotFound","passwordOutput","password","passwordHash","sha1Generator","toUpperCase","slice","found","findHash","result","hashes","find","val","passwordString","crypto","createHash","update","digest","Login","username","e","loginOrSignupToggle","loginOrSignup","handleLogin","preventDefault","comingSoon","loggedIn","style","width","App","BrowserRouter","components_NavBar","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8913a124.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className='nav-wrapper'>\r\n      <div className='container'>\r\n      <h5 className='brand-logo left'>';-- Have i Been Pwned?</h5>\r\n      <ul className='right'>\r\n        <li><NavLink to='/'>Home</NavLink></li>\r\n        <li><NavLink to='/Email'>Email</NavLink></li>\r\n        <li><NavLink to='/Password'>Password</NavLink></li>\r\n        <li><NavLink to='/Login'>Login</NavLink></li>\r\n      </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='container center-align'>\r\n      <div className=\"row\">\r\n        <div className=\"col s6 l6\">\r\n          <div className=\"card\">\r\n            <span className=\"card-title\">Email</span>\r\n            <div className=\"card-content\">\r\n              <p>Click below to check if you have an account that has been compromised in a data breach at any point. We will show you what we find.</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <NavLink to=\"/Email\">click Here</NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col s6 m6\">\r\n          <div className=\"card\">\r\n            <span className=\"card-title\">Password</span>\r\n            <div className=\"card-content\">\r\n              <p>Pwned Passwords are 551,509,767 real world passwords previously exposed in data breaches. Click below to see if your Password was one of them.</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <NavLink to=\"/Password\">click here</NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Email extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n\r\n      emailInput: '',\r\n      emailOutput: [],\r\n      emailNotFound: '',\r\n      isLoading: false\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { emailOutput, emailNotFound, isLoading } = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m4\">\r\n            <div className=\"card grey darken-1\">\r\n              <div className=\"card-content white-text\">\r\n                <span className=\"card-title\">Email</span>\r\n                <p>Enter your email address below to check if it was compromised in a data breach.</p>\r\n                <p>You may also enter a list of comma separated emails to check multiple accounts.</p>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                  <form className=\"col s12\">\r\n                    <div className=\"row\">\r\n                      <div className=\"input-field col s11 m11\">\r\n                        <i className=\"material-icons prefix\">mail</i>\r\n                        <textarea onChange={this.emailInput} id=\"icon_prefix2\" className=\"materialize-textarea\"></textarea>\r\n                        <label htmlFor=\"icon_prefix2\">Enter email</label>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <button className='waves-effect waves-teal btn-flat' onClick={this.getBreachedEmails} type='link'>SEARCH<i className=\"material-icons right\">send</i></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s12 m8\">\r\n            {\r\n              isLoading ? <div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n              </div> : emailOutput.length ? emailOutput.map((emailBreach, index) => {\r\n                return (\r\n                  <div key={index} className='white-text'>\r\n                    <h3>{emailBreach.email}<i className=\"material-icons prefix\">do_not_disturb</i></h3>\r\n                    <table>\r\n                      <thead>\r\n                        <tr className='red darken-1'>\r\n                          <th>Name</th>\r\n                          <th>Domain</th>\r\n                          <th>Breach Date</th>\r\n                          <th>Pwnd Count</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {\r\n                        emailBreach.Breaches.map((breach, index) => {\r\n                          return (\r\n                            <tbody key={index}>\r\n                              <tr>\r\n                                <td>{breach.Name}</td>\r\n                                <td>{breach.Domain}</td>\r\n                                <td>{breach.BreachDate}</td>\r\n                                <td>{breach.PwnCount}</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          );\r\n                        })\r\n                      }\r\n                    </table>\r\n                  </div>\r\n                )\r\n              })\r\n                  : null}\r\n            {emailNotFound.length ?\r\n              <div className=\"col s12 m12\">\r\n                <div className=\"card teal accent-3\">\r\n                  <div className=\"card-content white-text\">\r\n                    <span className=\"card-title\">Wohoo! no records found for:</span>\r\n                    <i className=\"material-icons prefix\">check_circle</i>\r\n                    {emailNotFound.split(',').map((email, index) => {\r\n                      return (\r\n                        email.length > 5 ?\r\n                          <p key={index}>{email}</p>\r\n                          : null\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"card-action\">\r\n                    <button className='waves-effect waves-teal btn-flat teal' onClick={this.closeCard} type='link'>CLOSE CARD</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  emailInput = (event) => {\r\n    this.setState({ emailInput: event.target.value });\r\n  }\r\n\r\n  splitEmails = (emailsStirngList) => {\r\n    emailsStirngList = emailsStirngList.replace(/\\s/g, '')\r\n    return emailsStirngList.match(/,/g) ? emailsStirngList.split(',') : [emailsStirngList];\r\n  }\r\n\r\n  getBreachedEmails = () => {\r\n    this.setState({ isLoading: true, emailOutput: [], emailNotFound: '' });\r\n\r\n    let emails = this.state.emailInput;\r\n    if (!emails.length) {\r\n      this.setState({isLoading: false})\r\n      return;\r\n    }\r\n    emails = this.splitEmails(emails);\r\n\r\n    emails.forEach(element => {\r\n      if (emails.length) {\r\n        fetch(`https://intense-spire-63761.herokuapp.com/api/email/${element}`) // backend of this app is deployed on heroku\r\n          .then(res => {\r\n            return res\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => JSON.parse(res))\r\n          .then(res => {\r\n            res['email'] = element;\r\n            return res;\r\n          })\r\n          .then(res => this.setState({ isLoading: false, emailOutput: [...this.state.emailOutput, res] }))\r\n          .catch(err => {\r\n            if (err) {\r\n              this.setState({ isLoading: false, emailNotFound: `${this.state.emailNotFound},${element}` });\r\n            }\r\n          })\r\n      }\r\n    });\r\n  }\r\n\r\n  closeCard = () => {\r\n    this.setState({ emailNotFound: '' })\r\n  }\r\n\r\n}\r\n\r\nexport default Email;","import React, { Component } from 'react';\r\nimport crypto from 'crypto';\r\n\r\nclass Password extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      passwordInput: '',\r\n      passwordOutput: '',\r\n      passwordNotFound: '2',\r\n      isLoading: false\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { passwordOutput, passwordNotFound, isLoading } = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <div className=\"card blue-grey darken-1\">\r\n              <div className=\"card-content white-text\">\r\n                <span className=\"card-title\">Password</span>\r\n                <p>Enter your password below to check if it was compromised in a data breach.</p>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                  <form className=\"col s12\">\r\n                    <div className=\"row\">\r\n                      <div className=\"input-field col s11 m11\">\r\n                        <i className=\"material-icons prefix\">confirmation_number</i>\r\n                        <input onChange={this.passwordInput} id=\"password\" type=\"password\" className=\"validate\"></input>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <button className='waves-effect waves-teal btn-flat' onClick={this.getBreachedPassword} type='link'>SEARCH<i className=\"material-icons right\">send</i></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isLoading ? <div className=\"progress\">\r\n            <div className=\"indeterminate\"></div>\r\n          </div> :\r\n            passwordOutput.length && passwordNotFound === '0' ?\r\n              <div className=\"col s12 m6\">\r\n                <div className=\"card red darken-1\">\r\n                  <div className=\"card-content white-text\">\r\n                    <span className=\"card-title\">Oh! Nooo!</span>\r\n                    <p>Your password was found in {passwordOutput} breaches! <i className=\"material-icons prefix\">sentiment_very_dissatisfied</i></p>\r\n                  </div>\r\n                  <div className=\"card-action\">\r\n                    <button className='waves-effect waves-teal btn-flat teal' onClick={this.closeCard} type='link'>CLOSE CARD</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              : passwordNotFound === '1' ?\r\n                <div className=\"col s12 m6\">\r\n                  <div className=\"card teal accent-3\">\r\n                    <div className=\"card-content white-text\">\r\n                      <span className=\"card-title\">Wohoo!</span>\r\n                      <p>Your password was not found in any breaches! <i className=\"material-icons prefix\">sentiment_very_satisfied</i></p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                      <button className='waves-effect waves-teal btn-flat teal' onClick={this.closeCard} type='link'>CLOSE CARD</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  passwordInput = (event) => {\r\n    this.setState({ passwordInput: event.target.value });\r\n  }\r\n\r\n  getBreachedPassword = () => {\r\n    this.setState({ passwordNotFound: '2', passwordOutput: '', isLoading: true });\r\n    let password = this.state.passwordInput;\r\n    if (!password.length) {\r\n      this.setState({ isLoading: false });\r\n      return;\r\n    }\r\n    const passwordHash = (this.sha1Generator(password)).toUpperCase();\r\n    fetch(`https://intense-spire-63761.herokuapp.com/api/password/${passwordHash.slice(0, 5)}`) // backend of this app is deployed on heroku\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const found = this.findHash(passwordHash, res);\r\n        if (found && found.split(':')[1] > 0) {\r\n          let result = found.split(':')[1].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          this.setState({ isLoading: false, passwordOutput: result, passwordNotFound: '0' })\r\n        }\r\n        else {\r\n          this.setState({ isLoading: false, passwordNotFound: '1' })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err) {\r\n          this.setState({ isLoading: false, passwordNotFound: '1' })\r\n        }\r\n      });\r\n  }\r\n\r\n  findHash = (passwordHash, hashes) => {\r\n    const rows = hashes.split('\\r\\n');\r\n    const found = rows.find(val => val.split(':')[0] === passwordHash.slice(5));\r\n    return found;\r\n  }\r\n\r\n  sha1Generator = (passwordString) => {\r\n    return crypto.createHash('sha1').update(passwordString, 'binary').digest('hex');\r\n  }\r\n\r\n  closeCard = () => {\r\n    this.setState({ passwordNotFound: '2' })\r\n  }\r\n}\r\n\r\nexport default Password;","import React, { Component } from 'react'\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginOrSignup: false,\r\n      username: '',\r\n      password: '',\r\n      isLoading: false,\r\n      loggedIn: false,\r\n      comingSoon: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, comingSoon } = this.state;\r\n    return (\r\n      <div className='row'>\r\n        <div className='col s12 m4 offset-m4'>\r\n          <div className='card'>\r\n            <div className='card-action teal lighten-2 white-text'>\r\n              <h3>Login Form</h3>\r\n            </div>\r\n\r\n            <div className='card-content'>\r\n              <div className='form-field'>\r\n                <input onChange={this.username}type='text' id='username'></input>\r\n                <label htmlFor='username'>Username</label>\r\n              </div><br></br>\r\n\r\n              <div className='form-field'>\r\n                <input onChange={this.password} type='password' id='password'></input>\r\n                <label htmlFor='password'>Password</label>\r\n              </div><br></br>\r\n\r\n              <div className=\"switch\">\r\n                <label>\r\n                  Login\r\n                  <input onChange={this.loginOrSignupToggle} type=\"checkbox\"></input>\r\n                  <span className=\"lever\"></span>\r\n                  Sign Up\r\n                </label>\r\n              </div><br></br>\r\n\r\n              <div className='form-field'>\r\n                <button onClick={this.handleLogin} className='btn-large wave-effect waves-light' style={{ width: '100%' }}>Submit</button>\r\n              </div>\r\n\r\n              {isLoading?<div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n              </div>:null}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {comingSoon?\r\n          <div className='col s12 m4 offset-m4'>\r\n            <div className='card'>\r\n              <div className='card-action teal lighten-2 white-text'>\r\n                <p>Thank you for showing an interest in our product.</p>\r\n                <p>This feature is coming soon!</p>\r\n              </div>\r\n            </div>\r\n          </div>:null}\r\n      </div>\r\n    )\r\n  };\r\n\r\n  username = (e) => {\r\n    this.setState({username: e.target.value})\r\n  }\r\n\r\n  password = (e) => {\r\n    this.setState({password: e.target.value})\r\n  }\r\n\r\n  loginOrSignupToggle = () => {\r\n    this.setState({ loginOrSignup: !this.state.loginOrSignup })\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.setState({comingSoon: true});\r\n    \r\n  };\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport NavBar from '../components/NavBar'\r\nimport Home from '../components/Home'\r\nimport Email from './Email'\r\nimport Password from './Password'\r\nimport Login from './Login'\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <NavBar />\r\n        <Route exact path='/' component={Home}></ Route>\r\n        <Route exact path='/Email' component={Email}></ Route>\r\n        <Route exact path='/Password' component={Password}></ Route>\r\n        <Route exact path='/Login' component={Login}></ Route>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}